---
import { getCollection } from "astro:content";
import { Picture } from "astro:assets";
import Layout from "src/layouts/Layout.astro";
import Container from "src/components/container.astro";

const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});
---

<svg style="display: none;">
  <symbol id="github-icon" viewBox="0 0 24 24">
    <path
      d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
      fill="currentColor"></path>
  </symbol>
</svg>

<Layout title="Team">
  <Container>
    <div class="Title">
      <h1>The #TeamVariation</h1>
      <p>There are a small passionate team.</p>
    </div>
    {
      (() => {
        const members = publishedTeamMembers.filter(
          (m) => m.data.category === "Leader",
        );
        if (members.length === 0) return null;

        return (
          <div class="leader-grid">
            {members.map((teamMemberEntry) => (
              <div class="team-member leader-member">
                <div class="team-member-info-container">
                  <div class="team-member-avatar-container">
                    <Picture
                      src={teamMemberEntry.data.avatar.src}
                      alt={teamMemberEntry.data.avatar.alt}
                      width={52}
                      height={52}
                      class="team-member-avatar"
                    />
                  </div>
                  <div class="team-member-info">
                    <h2 class="team-member-name">
                      {teamMemberEntry.data.name}
                    </h2>
                    <h3 class="team-member-title">
                      {teamMemberEntry.data.title}
                    </h3>
                  </div>

                  <div class="team-member-links">
                    <a
                      href={teamMemberEntry.data.social.github}
                      target="_blank"
                      class="social-link">
                      <svg class="social-icon">
                        <use href="#github-icon" />
                      </svg>
                    </a>
                  </div>
                </div>
                {teamMemberEntry.data.devices && (
                  <div class="team-member-devices">
                    {teamMemberEntry.data.devices.map((device) => (
                      <span class="device-tag">{device}</span>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>
        );
      })()
    }
    {
      (() => {
        const members = publishedTeamMembers.filter(
          (m) => m.data.category === "Developer",
        );
        if (members.length === 0) return null;

        return (
          <div class="team-grid">
            {members.map((teamMemberEntry) => (
              <div class="team-member">
                <div class="team-member-info-container">
                  <div class="team-member-avatar-container">
                    <Picture
                      src={teamMemberEntry.data.avatar.src}
                      alt={teamMemberEntry.data.avatar.alt}
                      width={52}
                      height={52}
                      class="team-member-avatar"
                    />
                  </div>

                  <div class="team-member-info">
                    <h2 class="team-member-name">
                      {teamMemberEntry.data.name}
                    </h2>
                    <h3 class="team-member-title">
                      {teamMemberEntry.data.title}
                    </h3>
                  </div>

                  <div class="team-member-links">
                    <a
                      href={teamMemberEntry.data.social.github}
                      target="_blank"
                      class="social-link">
                      <svg class="social-icon">
                        <use href="#github-icon" />
                      </svg>
                    </a>
                  </div>
                </div>
                {teamMemberEntry.data.devices && (
                  <div class="team-member-devices">
                    {teamMemberEntry.data.devices.map((device) => (
                      <span class="device-tag">{device}</span>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>
        );
      })()
    }
    {
      (() => {
        const members = publishedTeamMembers.filter(
          (m) => m.data.category === "Maintainer",
        );
        if (members.length === 0) return null;

        return (
          <div class="category-section">
            <h2 class="category-title">Awesome Maintainers</h2>
            <div class="team-grid">
              {members.map((teamMemberEntry) => (
                <div class="team-member">
                  <div class="team-member-info-container">
                    <div class="team-member-avatar-container">
                      <Picture
                        src={teamMemberEntry.data.avatar.src}
                        alt={teamMemberEntry.data.avatar.alt}
                        width={52}
                        height={52}
                        class="team-member-avatar"
                      />
                    </div>

                    <div class="team-member-info">
                      <h2 class="team-member-name">
                        {teamMemberEntry.data.name}
                      </h2>
                      <h3 class="team-member-title">
                        {teamMemberEntry.data.title}
                      </h3>
                    </div>

                    <div class="team-member-links">
                      <a
                        href={teamMemberEntry.data.social.github}
                        target="_blank"
                        class="social-link">
                        <svg class="social-icon">
                          <use href="#github-icon" />
                        </svg>
                      </a>
                    </div>
                  </div>
                  {teamMemberEntry.data.devices && (
                    <div class="team-member-devices">
                      {teamMemberEntry.data.devices.map((device) => (
                        <span class="device-tag">{device}</span>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        );
      })()
    }
  </Container>
</Layout>

<style>
  svg.social-icon {
    height: 24px;
    width: 24px;
    transition: all 0.3s cubic-bezier(0.3, 0, 0.8, 0.15);
    color: var(--md-sys-color-outline);
  }

  svg.social-icon:hover {
    height: 24px;
    width: 24px;
    transition: all 0.3s cubic-bezier(0.05, 0.7, 0.1, 1);
    color: var(--md-sys-color-primary);
  }

  .team-member-info-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 18px;
    width: 100%;
  }

  .category-section {
    margin-top: 48px;
  }

  .category-title {
    font-size: 24px;
    font-weight: 600;
    color: var(--md-sys-color-on-background);
    margin-bottom: 24px;
    padding-bottom: 8px;
    border-bottom: none;
  }

  .team-grid {
    display: grid;
    gap: 20px;
    margin: 0 auto;
    margin-top: 20px;
    max-width: 896px;
  }

  @media (min-width: 768px) {
    .team-grid {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  .team-member {
    position: relative;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 16px;
    padding: 24px;
    border-radius: 14px;
    border: 1px solid var(--md-sys-color-outline-variant);
  }

  .team-member:hover {
    transform: translateY(-2px);
  }

  .team-member-avatar-container {
    aspect-ratio: 1/1;
    height: 52px;
  }

  .team-member-avatar {
    border-radius: 50%;
    transition: all 0.3s ease;
    background-color: var(--md-sys-color-surface);
    object-fit: cover;
    object-position: center;
    aspect-ratio: 1/1;
    user-select: none;
  }

  .team-member-info {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    flex-shrink: 0;
  }

  .team-member-name {
    font-size: 22px;
    line-height: 32px;
    color: var(--md-sys-color-on-background);
    margin: 0;
  }

  .team-member-title {
    font-size: 16px;
    line-height: 24px;
    color: var(--md-sys-color-on-surface-variant);
    margin: 0;
  }

  .team-member-devices {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 0;
    justify-content: flex-start;
    margin-left: 64px;
    user-select: none;
  }

  .team-member-links {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
    justify-content: flex-end;
    width: 100%;
    align-items: center;
    user-select: none;
  }

  .device-tag {
    font-size: 14px;
    padding: 4px 10px;
    background-color: var(--md-sys-color-surface-container-high);
    border-radius: 72px;
    color: var(--md-sys-color-on-surface);
    transition: all 0.3s cubic-bezier(0.3, 0, 0.8, 0.15);
  }

  .device-tag:hover {
    background-color: var(--md-sys-color-surface-container-highest);
    border-radius: 6px;
    transition: all 0.3s cubic-bezier(0.05, 0.7, 0.1, 1);
    font-weight: 600;
  }

  .leader-member .device-tag {
    background-color: var(--md-sys-color-surface-container-highest);
  }

  .leader-member .device-tag:hover {
    background-color: var(--md-sys-color-on-secondary-fixed-variant);
  }

  .leader-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 40px;
    margin: 0 auto;
    margin-top: 16px;
    max-width: 896px;
  }

  .leader-member {
    background: var(--md-sys-color-surface-container);
    padding: 24px;
    border-radius: 14px;
    border: 1px solid var(--md-sys-color-surface-container);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    height: fit-content;
  }

  /* 二级标题样式 */
  h2 {
    font-family: var(--body-font);
    font-size: 28px;
    font-weight: 600;
    color: var(--md-sys-color-on-background);
    margin: 24px 0 16px;
    text-align: center;
    margin: 0 auto;
  }

  /* 三级标题样式 */
  h3 {
    font-family: var(--body-font);
    font-size: 20px;
    font-weight: 500;
    color: var(--md-sys-color-on-surface);
    text-align: center;
    margin: 16px 0 12px;
  }

  /* 段落样式 */
  p {
    font-family: var(--body-font);
    font-size: 16px;
    line-height: 1.7;
    color: var(--md-sys-color-on-surface-variant);
    margin-bottom: 16px;
    text-align: center;
    margin: 0 auto;
  }

  .Title {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 16px;
    margin: 48px 0;
  }

  .Title h1 {
    font-size: 48px;
    line-height: 1;
    font-weight: 500;
    margin: 0;
    letter-spacing: var(--title-font-letterspace) !important;
    border: none;
    padding: 0 14px;
    padding-top: 0;
    text-align: center;
  }

  body {
    margin-bottom: 72px !important;
  }
</style>
