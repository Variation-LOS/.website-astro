<!-- <script type="module">
  const pagefind = await import("/pagefind/pagefind.js");
  pagefind.init();
</script> -->
<a class="search-icon" id="search-icon">Search</a>

<div class="search-box" id="search-box">
  <div class="search-container">
    <div id="close-button" class="close-button">Back</div>
    <input
      id="search-input"
      class="search-input"
      type="text"
      placeholder="Search"
    />

    <div id="results" class="search-results">
      <div class="search-placeholder">
        <div>Type to search for your device or any blog post</div>
      </div>
    </div>
  </div>
</div>

<style is:global>
  body:has(#search-box.show) {
    overflow: hidden;
  }
</style>

<style>
  .close-button::before {
    content: "";
    height: 14px;
    width: 14px;
    display: block;
    mask-image: url("../../assets/arrow_back.svg");
    mask-size: 14px 14px;
    background-color: var(--md-sys-color-on-background);
  }
  #search-box {
    display: flex;
    flex-direction: column;
    justify-content: center;
    /* align-items: flex-start; */
    align-items: center;
    height: 100vh;
    transition: all 0.3s var(--m3e-sys-tramsition-in);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 150;
    padding: 24px;
    box-sizing: border-box;
    opacity: 0;
    background-color: color-mix(
      in srgb,
      var(--md-sys-color-background) 0%,
      transparent
    );
    user-select: none;
    pointer-events: none;
  }

  #search-box.show {
    display: flex;
    flex-direction: column;
    justify-content: center;
    /* align-items: flex-start; */
    align-items: center;
    background-color: var(--md-sys-color-background);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 150;
    transition: all 0.35s var(--m3e-sys-tramsition-out);
    padding: 48px;
    box-sizing: border-box;
    pointer-events: all;
    user-select: none;
    opacity: 1;
  }

  #search-box.search-container {
    max-width: 370px;
  }

  #search-box.show .search-container * {
    filter: blur(18px);
    transition: all 0.4s var(--m3e-sys-tramsition-in);
    font-weight: 500;
    text-decoration: none;
    text-align: start;
    opacity: 0;
    width: 100%;
    max-width: 370px;
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: flex-start;
  }

  #search-box.show .search-container * {
    filter: blur(0px);
    transition: all 0.5s var(--m3e-sys-tramsition-out);
    font-weight: 300;
    opacity: 1;
  }

  #search-box .search-container:nth-child(1) {
    transition-delay: 0.225s;
  }
  #search-box .search-container:nth-child(2) {
    transition-delay: 0.15s;
  }
  #search-box .search-container:nth-child(3) {
    transition-delay: 0.075s;
  }
  #search-box .search-container:nth-child(4) {
    transition-delay: 0s;
  }

  #search-box.show .search-container:nth-child(1) {
    transition-delay: 0s;
  }
  #search-box.show .search-container:nth-child(2) {
    transition-delay: 0.075s;
  }
  #search-box.show .search-container:nth-child(3) {
    transition-delay: 0.15s;
  }
  #search-box.show .search-container:nth-child(4) {
    transition-delay: 0.225s;
  }

  @media (max-width: 640px) {
    #search-box {
      padding: 28px;
    }

    #search-box.show {
      padding: 36px;
    }

    .search-icon {
      justify-content: center !important;
    }
  }

  .close-button {
    color: var(--md-sys-color-on-background);
    display: flex;
    align-items: center !important;
    gap: 6px;
    transition: all 0.3s ease-in-out !important;
    opacity: 0.5 !important;
  }

  .close-button:hover {
    opacity: 1 !important;
  }

  .close-button:active {
    opacity: 0.75 !important;
  }

  .search-icon {
    font-weight: 400;
    color: inherit;
    cursor: pointer;
    transition: all 0.25s ease-in-out;
    color: color-mix(
      in srgb,
      var(--md-sys-color-on-background) 50%,
      transparent
    );
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 8px;

    min-width: 128px;
    flex-shrink: 1;
  }

  .search-icon::before {
    content: "";
    display: block;
    width: 18px;
    height: 18px;
    mask-image: url("../../assets/search.svg");
    mask-size: 18px 18px;
    mask-repeat: no-repeat;
    opacity: 0.5;
    transition: all 0.25s ease-in-out;
    background-color: var(--md-sys-color-on-background);
  }

  .search-icon:hover {
    color: var(--md-sys-color-on-background);
  }

  .search-icon:hover::before {
    opacity: 1;
  }

  .search-box {
    display: none;
  }

  .search-backdrop {
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    backdrop-filter: blur(32px);
    height: 100vh;
    width: 100vw;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(24, 24, 27, 0.2);
  }

  .dark .search-backdrop {
    background-color: rgba(113, 113, 122, 0.2);
  }

  .search-container {
    padding: 0 0 96px;
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    max-width: 1860px;
    gap: 12px;
    position: relative;
    z-index: 1000;
  }

  .search-input-container {
    padding: 1rem;
  }

  .search-input {
    width: 100%;
    padding: 0;
    border: none;
    border-radius: 0;
    outline: none;
    background: transparent;
    font-size: 32px;
    color: var(--md-sys-color-on-background);
    font-weight: 400;
  }

  .search-results {
    min-height: 13rem;
    max-height: 24rem;
    padding: 0;
    padding-top: 0;
    overflow: auto;
    color: var(--md-sys-color-on-background);
  }

  .search-results > * + * {
    margin-top: 0.5rem;
  }

  .search-placeholder {
    width: 100%;
    font-size: 16px;
    text-align: start;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
  }

  .search-result-item {
    background-color: white;
    padding: 0.5rem;
    border-radius: 0.5rem;
    box-shadow:
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  .search-result-link {
    color: #3b82f6;
    transition: color 0.2s;
  }

  .search-result-excerpt {
    color: #6b7280;
    font-size: 0.875rem;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-top: 0.25rem;
    margin-left: 1rem;
  }

  .search-result-mark {
    background-color: #3b82f6;
    color: white;
  }

  input:is(:-webkit-autofill, :autofill) {
    margin-left: -8px;
    padding: 0 8px;
    border-radius: 10px;
  }
</style>

<!-- <script type="module">
  const searchIcon = document.getElementById("search-icon");
  const searchBox = document.getElementById("search-box");
  const searchInput = document.querySelector("#search-input");
  const searchCloseBtn = document.querySelector("#close-button");
  const resultsEl = document.getElementById("results");

  // 添加点击事件显示搜索框
  searchIcon.addEventListener("click", () => {
    searchBox.classList.toggle("show");
    searchInput.focus();
  });

  // 点击背景关闭搜索框
  searchCloseBtn.addEventListener("click", () => {
    searchBox.classList.toggle("show");
  });

  searchInput.addEventListener("input", handleSearch);

  async function handleSearch(e) {
    const { value } = e.target;
    let html = "";

    if (!value) {
      resultsEl.innerHTML = `
        <div class="search-placeholder">
          <div>Search Device or Blogs</div>
        </div>
      `;
      return;
    }

    const search = await pagefind.search(value);
    const results = search.results.map((item) => item.data());
    const data = await Promise.all(results);

    data.map(({ meta: { title }, url, excerpt }) => {
      html += `
      <div class="search-result-item">
        <a href="${url}" class="search-result-link">${title}</a>
        <p class="search-result-excerpt">
          ${excerpt.replaceAll("<mark", '<mark class="search-result-mark"')}
        </p>
      </div>
      `;
    });

    resultsEl.innerHTML = html;
  }
</script> -->
