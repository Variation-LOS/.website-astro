---
interface Props {
  size?: "md" | "lg";
  block?: boolean;
  style?: "outline" | "primary" | "inverted";
  class?: string;
  [x: string]: any;
}

const {
  size = "md",
  style = "primary",
  block,
  class: className,
  ...rest
} = Astro.props;
---

<style>
  .button {
    border-radius: 48px;
    text-align: center;
    transition: all 0.3s var(--m3e-sys-tramsition-in);
    outline: none;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }

  .button:hover {
    border-radius: 8px;
    transition: all 0.3s var(--m3e-sys-tramsition-out);
  }

  .button:focus-visible {
    box-shadow: 0 0 0 2px rgba(229, 231, 235, 1);
  }

  .button.block {
    width: 100%;
  }

  .button.size-md {
    padding: 10px 20px;
  }

  .button.size-lg {
    padding: 12px 24px;
  }

  .button.style-outline {
    border: 2px solid var(--md-sys-color-on-secondary-container);
    color: var(--md-sys-color-on-secondary-container);
    background: transparent;
  }

  .button.style-primary {
    background-color: var(--md-sys-color-primary);
    color: var(--md-sys-color-on-primary);
    border: none;
  }
</style>

<button
  {...rest}
  class={[
    "button",
    `size-${size}`,
    `style-${style}`,
    block && "block",
    className,
  ]
    .filter(Boolean)
    .join(" ")}
  ><slot />
</button>
